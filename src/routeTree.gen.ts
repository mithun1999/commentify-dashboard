/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as OnboardingPostSettingsImport } from './routes/onboarding/post-settings'
import { Route as OnboardingOtherSettingsImport } from './routes/onboarding/other-settings'
import { Route as OnboardingLinkedinImport } from './routes/onboarding/linkedin'
import { Route as OnboardingExtensionImport } from './routes/onboarding/extension'
import { Route as OnboardingDemoImport } from './routes/onboarding/demo'
import { Route as OnboardingCommentSettingsImport } from './routes/onboarding/comment-settings'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedPricingIndexImport } from './routes/_authenticated/pricing/index'
import { Route as AuthenticatedHistoryIndexImport } from './routes/_authenticated/history/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedSettingsPostImport } from './routes/_authenticated/settings/post'
import { Route as AuthenticatedSettingsCommentsImport } from './routes/_authenticated/settings/comments'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const OnboardingPostSettingsRoute = OnboardingPostSettingsImport.update({
  id: '/onboarding/post-settings',
  path: '/onboarding/post-settings',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingOtherSettingsRoute = OnboardingOtherSettingsImport.update({
  id: '/onboarding/other-settings',
  path: '/onboarding/other-settings',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingLinkedinRoute = OnboardingLinkedinImport.update({
  id: '/onboarding/linkedin',
  path: '/onboarding/linkedin',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingExtensionRoute = OnboardingExtensionImport.update({
  id: '/onboarding/extension',
  path: '/onboarding/extension',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingDemoRoute = OnboardingDemoImport.update({
  id: '/onboarding/demo',
  path: '/onboarding/demo',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingCommentSettingsRoute = OnboardingCommentSettingsImport.update({
  id: '/onboarding/comment-settings',
  path: '/onboarding/comment-settings',
  getParentRoute: () => rootRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPricingIndexRoute = AuthenticatedPricingIndexImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedHistoryIndexRoute = AuthenticatedHistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSettingsPostRoute = AuthenticatedSettingsPostImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => AuthenticatedSettingsRouteRoute,
} as any)

const AuthenticatedSettingsCommentsRoute =
  AuthenticatedSettingsCommentsImport.update({
    id: '/comments',
    path: '/comments',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/onboarding/comment-settings': {
      id: '/onboarding/comment-settings'
      path: '/onboarding/comment-settings'
      fullPath: '/onboarding/comment-settings'
      preLoaderRoute: typeof OnboardingCommentSettingsImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/demo': {
      id: '/onboarding/demo'
      path: '/onboarding/demo'
      fullPath: '/onboarding/demo'
      preLoaderRoute: typeof OnboardingDemoImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/extension': {
      id: '/onboarding/extension'
      path: '/onboarding/extension'
      fullPath: '/onboarding/extension'
      preLoaderRoute: typeof OnboardingExtensionImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/linkedin': {
      id: '/onboarding/linkedin'
      path: '/onboarding/linkedin'
      fullPath: '/onboarding/linkedin'
      preLoaderRoute: typeof OnboardingLinkedinImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/other-settings': {
      id: '/onboarding/other-settings'
      path: '/onboarding/other-settings'
      fullPath: '/onboarding/other-settings'
      preLoaderRoute: typeof OnboardingOtherSettingsImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/post-settings': {
      id: '/onboarding/post-settings'
      path: '/onboarding/post-settings'
      fullPath: '/onboarding/post-settings'
      preLoaderRoute: typeof OnboardingPostSettingsImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings/comments': {
      id: '/_authenticated/settings/comments'
      path: '/comments'
      fullPath: '/settings/comments'
      preLoaderRoute: typeof AuthenticatedSettingsCommentsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/post': {
      id: '/_authenticated/settings/post'
      path: '/post'
      fullPath: '/settings/post'
      preLoaderRoute: typeof AuthenticatedSettingsPostImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/history/': {
      id: '/_authenticated/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AuthenticatedHistoryIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/pricing/': {
      id: '/_authenticated/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof AuthenticatedPricingIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsCommentsRoute: typeof AuthenticatedSettingsCommentsRoute
  AuthenticatedSettingsPostRoute: typeof AuthenticatedSettingsPostRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsCommentsRoute: AuthenticatedSettingsCommentsRoute,
    AuthenticatedSettingsPostRoute: AuthenticatedSettingsPostRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedHistoryIndexRoute: typeof AuthenticatedHistoryIndexRoute
  AuthenticatedPricingIndexRoute: typeof AuthenticatedPricingIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedHistoryIndexRoute: AuthenticatedHistoryIndexRoute,
  AuthenticatedPricingIndexRoute: AuthenticatedPricingIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/onboarding/comment-settings': typeof OnboardingCommentSettingsRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/extension': typeof OnboardingExtensionRoute
  '/onboarding/linkedin': typeof OnboardingLinkedinRoute
  '/onboarding/other-settings': typeof OnboardingOtherSettingsRoute
  '/onboarding/post-settings': typeof OnboardingPostSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/settings/comments': typeof AuthenticatedSettingsCommentsRoute
  '/settings/post': typeof AuthenticatedSettingsPostRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/pricing': typeof AuthenticatedPricingIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesByTo {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/onboarding/comment-settings': typeof OnboardingCommentSettingsRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/extension': typeof OnboardingExtensionRoute
  '/onboarding/linkedin': typeof OnboardingLinkedinRoute
  '/onboarding/other-settings': typeof OnboardingOtherSettingsRoute
  '/onboarding/post-settings': typeof OnboardingPostSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/settings/comments': typeof AuthenticatedSettingsCommentsRoute
  '/settings/post': typeof AuthenticatedSettingsPostRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/pricing': typeof AuthenticatedPricingIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/onboarding/comment-settings': typeof OnboardingCommentSettingsRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/extension': typeof OnboardingExtensionRoute
  '/onboarding/linkedin': typeof OnboardingLinkedinRoute
  '/onboarding/other-settings': typeof OnboardingOtherSettingsRoute
  '/onboarding/post-settings': typeof OnboardingPostSettingsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/_authenticated/settings/comments': typeof AuthenticatedSettingsCommentsRoute
  '/_authenticated/settings/post': typeof AuthenticatedSettingsPostRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/history/': typeof AuthenticatedHistoryIndexRoute
  '/_authenticated/pricing/': typeof AuthenticatedPricingIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/onboarding/comment-settings'
    | '/onboarding/demo'
    | '/onboarding/extension'
    | '/onboarding/linkedin'
    | '/onboarding/other-settings'
    | '/onboarding/post-settings'
    | '/'
    | '/onboarding'
    | '/settings/comments'
    | '/settings/post'
    | '/help-center'
    | '/history'
    | '/pricing'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/onboarding/comment-settings'
    | '/onboarding/demo'
    | '/onboarding/extension'
    | '/onboarding/linkedin'
    | '/onboarding/other-settings'
    | '/onboarding/post-settings'
    | '/'
    | '/onboarding'
    | '/settings/comments'
    | '/settings/post'
    | '/help-center'
    | '/history'
    | '/pricing'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/onboarding/comment-settings'
    | '/onboarding/demo'
    | '/onboarding/extension'
    | '/onboarding/linkedin'
    | '/onboarding/other-settings'
    | '/onboarding/post-settings'
    | '/_authenticated/'
    | '/onboarding/'
    | '/_authenticated/settings/comments'
    | '/_authenticated/settings/post'
    | '/_authenticated/help-center/'
    | '/_authenticated/history/'
    | '/_authenticated/pricing/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  OnboardingCommentSettingsRoute: typeof OnboardingCommentSettingsRoute
  OnboardingDemoRoute: typeof OnboardingDemoRoute
  OnboardingExtensionRoute: typeof OnboardingExtensionRoute
  OnboardingLinkedinRoute: typeof OnboardingLinkedinRoute
  OnboardingOtherSettingsRoute: typeof OnboardingOtherSettingsRoute
  OnboardingPostSettingsRoute: typeof OnboardingPostSettingsRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  OnboardingCommentSettingsRoute: OnboardingCommentSettingsRoute,
  OnboardingDemoRoute: OnboardingDemoRoute,
  OnboardingExtensionRoute: OnboardingExtensionRoute,
  OnboardingLinkedinRoute: OnboardingLinkedinRoute,
  OnboardingOtherSettingsRoute: OnboardingOtherSettingsRoute,
  OnboardingPostSettingsRoute: OnboardingPostSettingsRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/onboarding/comment-settings",
        "/onboarding/demo",
        "/onboarding/extension",
        "/onboarding/linkedin",
        "/onboarding/other-settings",
        "/onboarding/post-settings",
        "/onboarding/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/help-center/",
        "/_authenticated/history/",
        "/_authenticated/pricing/",
        "/_authenticated/users/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/comments",
        "/_authenticated/settings/post"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/onboarding/comment-settings": {
      "filePath": "onboarding/comment-settings.tsx"
    },
    "/onboarding/demo": {
      "filePath": "onboarding/demo.tsx"
    },
    "/onboarding/extension": {
      "filePath": "onboarding/extension.tsx"
    },
    "/onboarding/linkedin": {
      "filePath": "onboarding/linkedin.tsx"
    },
    "/onboarding/other-settings": {
      "filePath": "onboarding/other-settings.tsx"
    },
    "/onboarding/post-settings": {
      "filePath": "onboarding/post-settings.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/_authenticated/settings/comments": {
      "filePath": "_authenticated/settings/comments.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/post": {
      "filePath": "_authenticated/settings/post.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/history/": {
      "filePath": "_authenticated/history/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pricing/": {
      "filePath": "_authenticated/pricing/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
